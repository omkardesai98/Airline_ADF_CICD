{
	"name": "AirlineDataTransformation",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AirlinedimSource",
						"type": "DatasetReference"
					},
					"name": "AirlinedimData"
				},
				{
					"dataset": {
						"referenceName": "DailyFlightData",
						"type": "DatasetReference"
					},
					"name": "DailyFlightData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ProcessedData",
						"type": "DatasetReference"
					},
					"name": "WriteProcessedData"
				}
			],
			"transformations": [
				{
					"name": "joinDeptAirport"
				},
				{
					"name": "DeriveDeptAirport"
				},
				{
					"name": "joinOrignAirport"
				},
				{
					"name": "DeriveArrivAirport"
				}
			],
			"scriptLines": [
				"source(output(",
				"          airport_id as string,",
				"          city as string,",
				"          state as string,",
				"          name as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AirlinedimData",
				"source(output(",
				"          Carrier as string,",
				"          OriginAirportID as string,",
				"          DestAirportID as string,",
				"          DepDelay as string,",
				"          ArrDelay as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DailyFlightData",
				"DailyFlightData, AirlinedimData join(OriginAirportID == airport_id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinDeptAirport",
				"joinDeptAirport select(mapColumn(",
				"          Carrier,",
				"          DestAirportID,",
				"          DepDelay,",
				"          ArrDelay,",
				"          city,",
				"          state,",
				"          DestAirportName = name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DeriveDeptAirport",
				"DeriveDeptAirport, AirlinedimData join(DestAirportID == airport_id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinOrignAirport",
				"joinOrignAirport select(mapColumn(",
				"          Carrier,",
				"          DepDelay,",
				"          ArrDelay,",
				"          Destinationcity = DeriveDeptAirport@city,",
				"          Destinationstate = DeriveDeptAirport@state,",
				"          DestAirportName,",
				"          Arrivalcity = AirlinedimData@city,",
				"          Arrivalstate = AirlinedimData@state,",
				"          ArrivalAirportName = name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DeriveArrivAirport",
				"DeriveArrivAirport sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     truncate: true,",
				"     umask: 0777,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> WriteProcessedData"
			]
		}
	}
}